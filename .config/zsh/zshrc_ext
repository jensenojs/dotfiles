# Secrets are sourced from $XDG_CONFIG_HOME/secrets/llm (yadm encrypted)
# Optional secrets file (keep out of VCS; managed by yadm encrypt)
[ -s "${XDG_CONFIG_HOME:-$HOME/.config}/secrets/llm" ] && source "${XDG_CONFIG_HOME:-$HOME/.config}/secrets/llm"

[ -s "$HOME/.rye/env" ] && source "$HOME/.rye/env"

# Go toolchain
# 1) 如果系统已存在 go（如 Homebrew 提供），不要覆盖；
# 2) 否则，若存在 /usr/local/go/bin/go，则作为后备加入 PATH。
if command -v go >/dev/null 2>&1; then
  :
elif [ -x "/usr/local/go/bin/go" ]; then
  export PATH="/usr/local/go/bin:$PATH"
fi

# GOPATH（可选，本地工作区）
if [ -d "$HOME/Projects/site-package/go" ]; then
    export GOPATH="$HOME/Projects/site-package/go"
fi

# 在 go 可用时将 GOPATH/bin 追加到 PATH（适配默认或自定义 GOPATH）
command -v go >/dev/null 2>&1 && export PATH="$PATH:$(go env GOPATH)/bin"

# Rust
if [ -d "${XDG_DATA_HOME:-$HOME/.local/share}/rustup" ]; then
    export RUSTUP_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/rustup"
fi
if [ -d "$HOME/Projects/site-package/cargo" ]; then
    export CARGO_HOME="$HOME/Projects/site-package/cargo"
   . "$CARGO_HOME/env"
fi

# Node.js
export NVM_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/nvm"
if [ -s "$NVM_DIR/nvm.sh" ]; then
   . "$NVM_DIR/nvm.sh"  # This loads nvm
fi

if [ -s "$NVM_DIR/bash_completion" ]; then
   . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi
if [ -d "$NVM_DIR/bin" ]; then
    export PATH="$NVM_DIR/versions/node/$(nvm current)/bin:$PATH"
fi

# riscv-toolchain
if [ -d "/usr/local/opt/riscv-gnu-toolchain/bin" ]; then
    PATH=$PATH:/usr/local/opt/riscv-gnu-toolchain/bin
fi

# MySQL client (Homebrew on macOS)
if [[ "$OSTYPE" == darwin* ]]; then
    if [ -d "/opt/homebrew/opt/mysql-client@8.4/bin" ]; then
        export PATH="/opt/homebrew/opt/mysql-client@8.4/bin:$PATH"
    elif [ -d "/opt/homebrew/opt/mysql-client/bin" ]; then
        export PATH="/opt/homebrew/opt/mysql-client/bin:$PATH"
    elif [ -d "/usr/local/opt/mysql-client/bin" ]; then
        export PATH="/usr/local/opt/mysql-client/bin:$PATH"
    fi
fi

# proxy setting
if [ -f "$HOME/Projects/scripts/proxy.sh" ]; then
    source "$HOME/Projects/scripts/proxy.sh" set
fi

# bun setting
if [ -f "$HOME/.bun" ]; then
  export BUN_INSTALL="$HOME/.bun"
  export PATH="$BUN_INSTALL/bin:$PATH"
fi
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# Local machine overrides
[ -s "$HOME/.local/bin/env" ] && . "$HOME/.local/bin/env"

# Lab
if [ -d "$HOME/Projects/Lab/ics2024/nemu/" ]; then
    export NEMU_HOME="$HOME/Projects/Lab/ics2024/nemu/"
fi
if [ -d "$HOME/Projects/Lab/ics2024/abstract-machine/" ]; then
    export AM_HOME="$HOME/Projects/Lab/ics2024/abstract-machine/"
fi

function ya() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}